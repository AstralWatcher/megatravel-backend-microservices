server:
  port: ${PORT:8555}
  ssl:
   enabled: false # A1 ovde menjati https na true
   key-store: classpath:auth.p12
   key-store-password: sifra
   key-store-type: PKCS12
   key-store-alies: auth(pki)
   trust-store: classpath:authTrust.p12
   trust-store-password: sifra
   trust-store-type: PKCS12

spring:
  application:
    name: containerized-login
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    #2. konekcija ka bazi koja se nalazi u dockeru
    #url: jdbc:mysql://megabooker-mysql:3306/db_megabooker
    
    #2. konekcija ka lokalnoj bazi u MySql
    url: jdbc:mysql://localhost:3306/db_megabooker?useUnicode=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC
    
    #2. konekcija ka google cloud bazi u MySql
    #url: jdbc:mysql://google/db_megabooker?cloudSqlInstance=loginandregistration-244623:us-central1:megabooker&socketFactory=com.google.cloud.sql.mysql.SocketFactory&useSSL=false&user=root&password=stefan

    #2. konekcija ka remoteMysql
    #url: jdbc:mysql://remotemysql.com/Zn8xZQY55z?useUnicode=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC
    
    username: root
    password: stefan
#    username: Zn8xZQY55z
#    password: Qy8KqZ0jAI
    initialization-mode: always
    continue-on-error: true
#konekcija ka cloudu
#  cloud:
#    gcp:
#      sql:
#        database-name: db_megabooker
#        instance-connection-name: loginandregistration-244623:us-central1:megabooker
  jpa:
    show-sql: true
    generate-ddl: true
    hibernate:
      dialect: org.hibernate.dialect.MySQLDialect
      ddl-auto: update
      #ddl-auto: none
      
  
#  cloud:
#    client:
#      hostname: ${HOSTNAME}
  
#logging:
#    level:
#      com.netflix: WARN
#      org.springframework.web: WARN
#      com.megatravel: DEBUG

#eureka:
#  instance:
##    hostname: ${HOSTNAME}
##    preferIpAddress: true
##    instance-id: ${spring.application.name}:${spring.application.instance_id:${random.value}}
#    leaseRenewalIntervalInSeconds: 1
#    leaseExpirationDurationInSeconds: 2
#  client:
##    registerWithEureka: true
##    fetchRegistry: true
#    serviceUrl:
#        defaultZone: http://localhost:8761/eureka/



eureka:
  client:
    register-with-eureka: true
    fetch-registry: true
    securePortEnabled: true
    leaseRenewalIntervalInSeconds: 1
    leaseExpirationDurationInSeconds: 2
    serviceUrl:
      #3. konekcija ka dockeru
      #defaultZone: http://discovery:8761/eureka/
      
      #3. konekcija ka eclipsu
      defaultZone: http://localhost:8761/eureka/
      
      #3. konekcija na google cloud
      #defaultZone: http://35.239.99.194:8761/eureka/
      
  instance:
    secureVirtualHostName: ${spring.application.name}
    nonSecurePortEnabled: true #false kada ukljucim https A2
    securePortEnabled: false #true
    securePort: ${server.port}
    statusPageUrl: https://localhost:${server.port}/info
    healthCheckUrl: https://localhost:${server.port}/health
    homePageUrl: https://localhost:${server.port}

ribbon:
  eureka:
    enabled: true
